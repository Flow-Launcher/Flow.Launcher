<Window x:Class="Flow.Launcher.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:flowlauncher="clr-namespace:Flow.Launcher"
        xmlns:vm="clr-namespace:Flow.Launcher.ViewModel"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="clr-namespace:Flow.Launcher.Converters"
        xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
        mc:Ignorable="d"
        Title="Flow Launcher"
        Topmost="True"
        SizeToContent="Height"
        ResizeMode="NoResize"
        WindowStyle="None"
        WindowStartupLocation="Manual"
        AllowDrop="True"
        ShowInTaskbar="False"
        Style="{DynamicResource WindowStyle}"
        Icon="Images/app.png"
        AllowsTransparency="True"
        Background="Transparent"
        Loaded="OnLoaded"
        Initialized="OnInitialized"
        Closing="OnClosing"
        LocationChanged="OnLocationChanged"
        Deactivated="OnDeactivated"
        PreviewKeyDown="OnKeyDown"
        MinWidth="{Binding MainWindowWidth, Mode=OneWay}"
        MaxWidth="{Binding MainWindowWidth, Mode=OneWay}"
        Visibility="{Binding MainWindowVisibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
        d:DataContext="{d:DesignInstance vm:MainViewModel}">
    <Window.Resources>
        <converters:QuerySuggestionBoxConverter x:Key="QuerySuggestionBoxConverter"/>
        <converters:BorderClipConverter x:Key="BorderClipConverter"/>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="Escape" Command="{Binding EscCommand}"></KeyBinding>
        <!--<KeyBinding Key="F1" Command="{Binding StartHelpCommand}"></KeyBinding>-->
        <KeyBinding Key="F5" Command="{Binding ReloadPluginDataCommand}"></KeyBinding>
        <KeyBinding Key="Tab" Command="{Binding SelectNextItemCommand}"></KeyBinding>
        <KeyBinding Key="Tab" Modifiers="Shift" Command="{Binding SelectPrevItemCommand}"></KeyBinding>
        <KeyBinding Key="N" Modifiers="Ctrl" Command="{Binding SelectNextItemCommand}"></KeyBinding>
        <KeyBinding Key="J" Modifiers="Ctrl" Command="{Binding SelectNextItemCommand}"></KeyBinding>
        <KeyBinding Key="D" Modifiers="Ctrl" Command="{Binding SelectNextPageCommand}"></KeyBinding>
        <KeyBinding Key="P" Modifiers="Ctrl" Command="{Binding SelectPrevItemCommand}"></KeyBinding>
        <KeyBinding Key="K" Modifiers="Ctrl" Command="{Binding SelectPrevItemCommand}"></KeyBinding>
        <KeyBinding Key="U" Modifiers="Ctrl" Command="{Binding SelectPrevPageCommand}"></KeyBinding>
        <KeyBinding Key="Home" Modifiers="Alt" Command="{Binding SelectFirstResultCommand}"></KeyBinding>
        <KeyBinding Key="O" Modifiers="Ctrl" Command="{Binding LoadContextMenuCommand}"></KeyBinding>
        <KeyBinding Key="Right" Command="{Binding LoadContextMenuCommand}"></KeyBinding>
        <KeyBinding Key="Left" Command="{Binding EscCommand}"></KeyBinding>
        <KeyBinding Key="H" Modifiers="Ctrl" Command="{Binding LoadHistoryCommand}"></KeyBinding>
        <KeyBinding Key="Enter" Modifiers="Ctrl+Shift" Command="{Binding OpenResultCommand}"></KeyBinding>
        <KeyBinding Key="Enter" Modifiers="Shift" Command="{Binding LoadContextMenuCommand}"></KeyBinding>
        <KeyBinding Key="Enter" Command="{Binding OpenResultCommand}"></KeyBinding>
        <KeyBinding Key="Enter" Modifiers="Ctrl" Command="{Binding OpenResultCommand}"></KeyBinding>
        <KeyBinding Key="Enter" Modifiers="Alt" Command="{Binding OpenResultCommand}"></KeyBinding>
        <KeyBinding Key="D1" Modifiers="{Binding OpenResultCommandModifiers}" Command="{Binding OpenResultCommand}" CommandParameter="0"></KeyBinding>
        <KeyBinding Key="D2" Modifiers="{Binding OpenResultCommandModifiers}" Command="{Binding OpenResultCommand}" CommandParameter="1"></KeyBinding>
        <KeyBinding Key="D3" Modifiers="{Binding OpenResultCommandModifiers}" Command="{Binding OpenResultCommand}" CommandParameter="2"></KeyBinding>
        <KeyBinding Key="D4" Modifiers="{Binding OpenResultCommandModifiers}" Command="{Binding OpenResultCommand}" CommandParameter="3"></KeyBinding>
        <KeyBinding Key="D5" Modifiers="{Binding OpenResultCommandModifiers}" Command="{Binding OpenResultCommand}" CommandParameter="4"></KeyBinding>
        <KeyBinding Key="D6" Modifiers="{Binding OpenResultCommandModifiers}" Command="{Binding OpenResultCommand}" CommandParameter="5"></KeyBinding>
        <KeyBinding Key="D7" Modifiers="{Binding OpenResultCommandModifiers}" Command="{Binding OpenResultCommand}" CommandParameter="6"></KeyBinding>
        <KeyBinding Key="D8" Modifiers="{Binding OpenResultCommandModifiers}" Command="{Binding OpenResultCommand}" CommandParameter="7"></KeyBinding>
        <KeyBinding Key="D9" Modifiers="{Binding OpenResultCommandModifiers}" Command="{Binding OpenResultCommand}" CommandParameter="8"></KeyBinding>
    </Window.InputBindings>
    <Grid>
        <Border Style="{DynamicResource WindowBorderStyle}" MouseDown="OnMouseDown">
            <StackPanel Orientation="Vertical">
                <DockPanel>
                    <StackPanel DockPanel.Dock="Left" VerticalAlignment="Center">
                        <Grid>
                            <Border x:Name="MenuSignPanel" Style="{DynamicResource MenuSignPanelStyle}">
                            <TextBlock x:Name="MenuSignText" Style="{DynamicResource MenuSignTextStyle}" FontSize="20" VerticalAlignment="Center" ></TextBlock></Border>
                        </Grid>
                    </StackPanel>
                    <StackPanel>
                        <Grid>
                            <TextBox x:Name="QueryTextSuggestionBox"
                                 Style="{DynamicResource QuerySuggestionBoxStyle}"
                                 IsEnabled="False">
                                <TextBox.Text>
                                    <MultiBinding Converter="{StaticResource QuerySuggestionBoxConverter}">
                                        <Binding ElementName="QueryTextBox" Path="Text"/>
                                        <Binding ElementName="ResultListBox" Path="SelectedItem"/>
                                    </MultiBinding>
                                </TextBox.Text>
                            </TextBox>
                            <TextBox x:Name="QueryTextBox"
                            Style="{DynamicResource QueryBoxStyle}"
                             Text="{Binding QueryText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             PreviewDragOver="OnPreviewDragOver"
                             AllowDrop="True"
                             Visibility="Visible"
                            Background="Transparent">
                                <TextBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Command="ApplicationCommands.Cut"/>
                                        <MenuItem Command="ApplicationCommands.Copy"/>
                                        <MenuItem Command="ApplicationCommands.Paste"/>
                                        <Separator />
                                        <MenuItem Header="{DynamicResource flowlauncher_settings}"  Click="OnContextMenusForSettingsClick" />
                                        <MenuItem Command="{Binding EscCommand}" Header="{DynamicResource closeWindow}"/>
                                    </ContextMenu>
                                </TextBox.ContextMenu>
                            </TextBox>
                            <Canvas Style="{DynamicResource SearchIconPosition}">
                                <TextBlock Style="{DynamicResource StartHereMessage}" Text="{StaticResource StartHereMsg}" TextAlignment="Right" Canvas.Right="55" IsHitTestVisible="false" FontSize="14" Canvas.Top="6">
                                    <TextBlock.Foreground>
                                        <SolidColorBrush x:Name="StartHereColor" Color="{DynamicResource StartHereMessageColor}" />
                                    </TextBlock.Foreground>
                                </TextBlock>
                                <Path Data="{DynamicResource SearchIconImg}" Style="{DynamicResource SearchIconStyle}" Margin="0"  Stretch="Fill"/>
                            </Canvas>
                        </Grid>
                    </StackPanel>
                </DockPanel>

                <Grid ClipToBounds="True">
                    <ContentControl>
                        <ContentControl.Style>
                            <Style TargetType="ContentControl">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=ResultListBox, Path=Visibility}" Value="Visible">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=ContextMenu, Path=Visibility}" Value="Visible">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=History, Path=Visibility}" Value="Visible">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                        <Rectangle Width="Auto" HorizontalAlignment="Stretch" Style="{DynamicResource SeparatorStyle}"/>
                    </ContentControl>
                    <Line x:Name="ProgressBar" HorizontalAlignment="Right"
                  Style="{DynamicResource PendingLineStyle}" Visibility="{Binding ProgressBarVisibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                  Y1="0" Y2="0" X1="-150" X2="-50" Height="2" Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}},Path=ActualWidth}" StrokeThickness="1">
                    </Line>
                </Grid>
                    
                <Border Style="{DynamicResource ResultRadius}">
                    <Border.Clip>
                        <MultiBinding Converter="{StaticResource BorderClipConverter}">
                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                            <Binding Path="CornerRadius" RelativeSource="{RelativeSource Self}"/>
                        </MultiBinding>
                    </Border.Clip>
                    <Grid>
                        <ContentControl>
                            <ContentControl.Style>
                                <Style TargetType="ContentControl">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=ContextMenu, Path=Visibility}" Value="Visible">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=History, Path=Visibility}" Value="Visible">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                            </ContentControl.Style>
                            <flowlauncher:ResultListBox x:Name="ResultListBox" DataContext="{Binding Results}" PreviewMouseDown="OnPreviewMouseButtonDown" />
                        </ContentControl>
                        <ContentControl>
                            <flowlauncher:ResultListBox DataContext="{Binding ContextMenu}" PreviewMouseDown="OnPreviewMouseButtonDown" x:Name="ContextMenu"/>
                        </ContentControl>
                        <ContentControl>
                            <flowlauncher:ResultListBox DataContext="{Binding History}" PreviewMouseDown="OnPreviewMouseButtonDown" x:Name="History"/>
                        </ContentControl>
                    </Grid>
                </Border>

                <Popup VerticalAlignment="Center" StaysOpen="False" x:Name="HotkeyPopup" Style="{DynamicResource HotkeyPopupStyle}" Margin="12" Placement="Right"  HorizontalOffset="0" VerticalOffset="-1" AllowsTransparency="True">
                    <Border Style="{DynamicResource WindowBorderStyle}">
                        <StackPanel>
                        <DockPanel HorizontalAlignment="Stretch" LastChildFill="True" Margin="0 0 0 0">
                                <ListBox x:Name="HotkeyList" AlternationCount="2" Padding="0 0 0 0" DockPanel.Dock="Right" Background="Transparent" ItemContainerStyle="{DynamicResource HotKeyPopupListStyle}">
                                </ListBox>
                        </DockPanel>
                    </StackPanel>
                    </Border>
                </Popup>

                <Border VerticalAlignment="Center" x:Name="SmallTipBorder" Style="{DynamicResource SmallTipStyle}" Margin="0 10 0 0" Padding="0 0 0 0">
                    <Border.Clip>
                        <MultiBinding Converter="{StaticResource BorderClipConverter}">
                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                            <Binding Path="CornerRadius" RelativeSource="{RelativeSource Self}"/>
                        </MultiBinding>
                    </Border.Clip>
                    <StackPanel>
                        <Rectangle Width="Auto" HorizontalAlignment="Stretch" Style="{DynamicResource SeparatorStyle}"/>
                        <WrapPanel HorizontalAlignment="Center" Margin="12 0 8 0" x:Name="SmallTipPanel01" Style="{DynamicResource SmallTipPanel01Style}">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <Border Style="{DynamicResource HotKeyBorder}">
                                    <TextBlock FontSize="10">
                                        <TextBlock.Foreground>
                                            <SolidColorBrush Color="{DynamicResource HotkeyTextColor}" />
                                        </TextBlock.Foreground>&#129046;</TextBlock>
                                </Border>
                                <Border Style="{DynamicResource HotKeyBorder}">
                                    <TextBlock FontSize="10">
                                        <TextBlock.Foreground>
                                            <SolidColorBrush Color="{DynamicResource HotkeyTextColor}" />
                                        </TextBlock.Foreground>
                                        SHIFT+ENTER</TextBlock>
                                </Border>
                                <TextBlock VerticalAlignment="Center" LineHeight="15" Margin="4 0 6 8" TextWrapping="WrapWithOverflow" FontSize="11" HorizontalAlignment="Center" TextAlignment="Center" x:Name="TipText1" Text="{DynamicResource SmallTipContextMenu}">
                                    <TextBlock.Foreground>
                                        <SolidColorBrush Color="{DynamicResource SmallTipTextColor}" />
                                    </TextBlock.Foreground>
                                </TextBlock>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <Border Style="{DynamicResource HotKeyBorder}">
                                    <TextBlock FontSize="10">
                                        <TextBlock.Foreground>
                                            <SolidColorBrush Color="{DynamicResource HotkeyTextColor}" />
                                        </TextBlock.Foreground>CTRL+ENTER</TextBlock>
                                </Border>
                                <TextBlock VerticalAlignment="Center" LineHeight="15" Margin="4 0 4 8" TextWrapping="WrapWithOverflow" FontSize="11" HorizontalAlignment="Center" TextAlignment="Center" x:Name="TipText2" Text="{DynamicResource SmallTipOpenFolder}">
                                    <TextBlock.Foreground>
                                        <SolidColorBrush Color="{DynamicResource SmallTipTextColor}" />
                                    </TextBlock.Foreground>
                                </TextBlock>
                            </StackPanel>
                        </WrapPanel>
                        <WrapPanel HorizontalAlignment="Center" Margin="12 0 8 0" x:Name="SmallTipPanel02" Style="{DynamicResource SmallTipPanel02Style}">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <Border Style="{DynamicResource HotKeyBorder}">
                                    <TextBlock FontSize="10">
                                        <TextBlock.Foreground>
                                            <SolidColorBrush Color="{DynamicResource HotkeyTextColor}" />
                                        </TextBlock.Foreground>&#129044;</TextBlock>
                                </Border>
                                <Border Style="{DynamicResource HotKeyBorder}">
                                    <TextBlock FontSize="10">
                                        <TextBlock.Foreground>
                                            <SolidColorBrush Color="{DynamicResource HotkeyTextColor}" />
                                        </TextBlock.Foreground>ESC</TextBlock>
                                </Border>
                                <TextBlock VerticalAlignment="Center" LineHeight="15" Margin="4 0 6 8" TextWrapping="WrapWithOverflow" FontSize="11" HorizontalAlignment="Center" TextAlignment="Center" x:Name="TipText3" Text="{DynamicResource SmallTipBackResult}">
                                    <TextBlock.Foreground>
                                        <SolidColorBrush Color="{DynamicResource SmallTipTextColor}" />
                                    </TextBlock.Foreground>
                                </TextBlock>
                            </StackPanel>
                        </WrapPanel>
                    </StackPanel>
                </Border>
            </StackPanel>
        </Border>
    </Grid>
</Window>
